#!groovy
pipeline {
    agent {
        label 'linux'
    }

    environment {
        SERVICE_NAME = 'cennznet-js-spotx'
        IMAGE_NAME = "centrality/${SERVICE_NAME}-build:1.0.${BUILD_NUMBER}"
        GIT_NAME = 'Jenkins'
        GIT_EMAIL = 'jenkins@centrality.ai'
        PUBLISH_IMAGE_NAME = "centrality/${SERVICE_NAME}:1.0.${BUILD_NUMBER}"
        LAST_COMMIT_AUTHOR = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()
        AWS_ACCESS_KEY = credentials('TF_AWS_ACCESS_KEY')
        AWS_SECRET_KEY = credentials('TF_AWS_SECRET_KEY')
        GEMFURY_TOKEN = credentials('GEMFURY_TOKEN')
    }

    stages {
        stage('Build') {
            environment {
                SSH_RSA_FILE_PATH = credentials('jenkins-ssh-key')
            }
            when {
                expression { env.GIT_NAME != env.LAST_COMMIT_AUTHOR }
            }
            steps {
                sh './ci/deployment/build.sh'
            }
        }

        stage('Unit Test') {
            when {
                expression { env.GIT_NAME != env.LAST_COMMIT_AUTHOR }
            }
            steps {
                sh './ci/deployment/unit-test.sh'
            }
        }

        stage('Confirm Publish') {
            when {
                expression { env.GIT_NAME != env.LAST_COMMIT_AUTHOR }
            }
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                    input "Confirm publish?"
                }
            }
        }

        stage('Publish to Gemfury') {
            when {
                expression { env.GIT_NAME != env.LAST_COMMIT_AUTHOR }
            }
            environment {
                GEMFURY_EXTERNAL_TOKEN = credentials('GEMFURY_EXTERNAL_TOKEN')
            }
            steps {
                script {
                    timeout(time: 30, unit: 'MINUTES') {
                        env.RELEASE_SCOPE = input message: 'User input required',
                                parameters: [choice(name: 'RELEASE_SCOPE', choices: 'patch\nminor\nmajor', description: 'What is the release scope?')]
                    }
                }
                sh './ci/deployment/publish.sh'
            }
        }
    }

    post {
        always {
            echo "pipeline post always"
            sh 'bash /mnt/jenkins/script/cleanup.sh'
        }
    }
}