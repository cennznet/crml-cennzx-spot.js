ARG IMAGE_NAME
FROM ${IMAGE_NAME}
WORKDIR workdir/

ARG GIT_NAME
ARG GIT_EMAIL
ARG GEMFURY_TOKEN
ARG GEMFURY_EXTERNAL_TOKEN

# add credentials on build
RUN mkdir /root/.ssh/
COPY ./git-ssh-key ./git-ssh-key
RUN mv ./git-ssh-key /root/.ssh/id_rsa
RUN chmod 700 /root/.ssh/id_rsa
RUN echo 'IdentityFile /root/.ssh/id_rsa' > ~/.ssh/config

# make sure your domain is accepted
RUN touch /root/.ssh/known_hosts
RUN ssh-keyscan bitbucket.org >> /root/.ssh/known_hosts

# configure git
RUN git --version
RUN git config user.name ${GIT_NAME}
RUN git config user.email ${GIT_EMAIL}

RUN git status
RUN git reset --hard

RUN npx lerna exec -- 'cpx package.json build/'
RUN npx lerna exec -- 'cpx ../../LICENSE build/'
RUN npx lerna exec -- 'cpx README.md build/'

# pack packages for uploading
RUN npx lerna exec -- "cd build && npm pack"


# push all packages to Gemfury centrality
RUN \
  echo 'Pushing packages \${workdir} to Gemfury' && \
  npx lerna exec \
    -- \
      "\
        cd build && \
        PUSH_URL=\"https://${GEMFURY_TOKEN}@push.fury.io/centrality/\" && \
        PACKAGE_NAME=\$(ls *.tgz) && \
        TAR_PATH=\"\$(pwd)/\${PACKAGE_NAME}\" && \
        if [ ! -f TAR_PATH ]; then continue; fi && \
        echo \" - Pushing package: \$PACKAGE_NAME\" && \
        ( \
          RESPONSE=\$(curl -sS -F package=@\${TAR_PATH} \${PUSH_URL}) && \
          echo \"\${RESPONSE}\" && \
          case \"\${RESPONSE}\" in \
            *\"... ok\"*) echo \" - Pushed package: \$PACKAGE_NAME\";; \
            *        ) (echo \" - Failed to push package: \$PACKAGE_NAME\" && exit 1);; \
          esac \
        ); \
      ";

# push all packages to Gemfury centrality external
RUN \
  echo 'Pushing packages \${workdir} to Gemfury' && \
  npx lerna exec \
    -- \
      "\
        cd build && \
        PUSH_URL=\"https://${GEMFURY_EXTERNAL_TOKEN}@push.fury.io/centralityexternals/\" && \
        PACKAGE_NAME=\$(ls *.tgz) && \
        TAR_PATH=\"\$(pwd)/\${PACKAGE_NAME}\" && \
        if [ ! -f TAR_PATH ]; then continue; fi && \
        echo \" - Pushing package: \$PACKAGE_NAME\" && \
        ( \
          RESPONSE=\$(curl -sS -F package=@\${TAR_PATH} \${PUSH_URL}) && \
          echo \"\${RESPONSE}\" && \
          case \"\${RESPONSE}\" in \
            *\"... ok\"*) echo \" - Pushed package: \$PACKAGE_NAME\";; \
            *        ) (echo \" - Failed to push package: \$PACKAGE_NAME\" && exit 1);; \
          esac \
        ); \
      ";
